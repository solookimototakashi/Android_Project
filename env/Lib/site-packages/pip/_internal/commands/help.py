<<<<<<< HEAD
# The following comment should be removed at some point in the future.
# mypy: disallow-untyped-defs=False

from __future__ import absolute_import
=======
from optparse import Values
from typing import List
>>>>>>> 1a285051063f1fdcadeb31ce89e4014675110f3a

from pip._internal.cli.base_command import Command
from pip._internal.cli.status_codes import SUCCESS
from pip._internal.exceptions import CommandError


class HelpCommand(Command):
    """Show help for commands"""

    usage = """
      %prog <command>"""
    ignore_require_venv = True

<<<<<<< HEAD
    def run(self, options, args):
        from pip._internal.commands import (
            commands_dict, create_command, get_similar_commands,
=======
    def run(self, options: Values, args: List[str]) -> int:
        from pip._internal.commands import (
            commands_dict,
            create_command,
            get_similar_commands,
>>>>>>> 1a285051063f1fdcadeb31ce89e4014675110f3a
        )

        try:
            # 'pip help' with no args is handled by pip.__init__.parseopt()
            cmd_name = args[0]  # the command we need help for
        except IndexError:
            return SUCCESS

        if cmd_name not in commands_dict:
            guess = get_similar_commands(cmd_name)

<<<<<<< HEAD
            msg = ['unknown command "{}"'.format(cmd_name)]
            if guess:
                msg.append('maybe you meant "{}"'.format(guess))

            raise CommandError(' - '.join(msg))
=======
            msg = [f'unknown command "{cmd_name}"']
            if guess:
                msg.append(f'maybe you meant "{guess}"')

            raise CommandError(" - ".join(msg))
>>>>>>> 1a285051063f1fdcadeb31ce89e4014675110f3a

        command = create_command(cmd_name)
        command.parser.print_help()

        return SUCCESS
